


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ************************
    2 00000000         ; * file:   for_asm_calls.S
    3 00000000         ; * function: save and restore scratch registers
    4 00000000         ; * ----------------------------------------------------
                       ------------------------
    5 00000000         ; * comments: These calls are used in the first assemble
                       r laboratories
    6 00000000         ; *     to hide the scratch register usage
    7 00000000         ; ******************************************************
                       ***********************/
    8 00000000                 EXPORT           decOut
    9 00000000                 EXPORT           strOut
   10 00000000                 EXPORT           decIn
   11 00000000                 EXPORT           strIn
   12 00000000                 IMPORT           printf
   13 00000000                 IMPORT           scanf
   14 00000000                 IMPORT           getchar
   15 00000000         
   16 00000000                 AREA             |.text|, CODE, READONLY
   17 00000000         
   18 00000000         
   19 00000000         ;/******************************************************
                       ************************
   20 00000000         ; * name:   decOut
   21 00000000         ; * function: display a decimal value on the debug termi
                       nal
   22 00000000         ; * ----------------------------------------------------
                       ------------------------
   23 00000000         ; * parameters: r0 - the value to display
   24 00000000         ; *
   25 00000000         ; * comments: use USE_STDIO_NOBUF 1 in config.h to print
                        direclty the value
   26 00000000         ; *     on the serial port
   27 00000000         ; ******************************************************
                       ***********************/
   28 00000000         decOut
   29 00000000 E92D 500F       push             {r0-r3,ip,lr}
   30 00000004 4601            mov              r1,r0
   31 00000006 481D            ldr              r0,=strDecOut
   32 00000008 F7FF FFFE       bl               printf
   33 0000000C E8BD 900F       pop              {r0-r3,ip,pc}
   34 00000010         
   35 00000010         
   36 00000010         ;/******************************************************
                       ************************
   37 00000010         ; * name:   strOut
   38 00000010         ; * function: display a string on the debug terminal
   39 00000010         ; *     The string has to finish with a NULL character
   40 00000010         ; * ----------------------------------------------------
                       ------------------------
   41 00000010         ; * parameters: r0 - the string pointer
   42 00000010         ; *
   43 00000010         ; * comments: use USE_STDIO_NOBUF 1 in config.h to print
                        direclty the value
   44 00000010         ; *     on the serial port
   45 00000010         ; ******************************************************
                       ***********************/
   46 00000010         strOut



ARM Macro Assembler    Page 2 


   47 00000010 E92D 500F       push             {r0-r3,ip,lr}
   48 00000014 4601            mov              r1,r0
   49 00000016 481A            ldr              r0,=strStrOut
   50 00000018 F7FF FFFE       bl               printf
   51 0000001C E8BD 900F       pop              {r0-r3,ip,pc}
   52 00000020         
   53 00000020         ;/******************************************************
                       ************************
   54 00000020         ; * name:   decIn
   55 00000020         ; * function: read a decimal value on the debug terminal
                       
   56 00000020         ; *     The value ends with a CR (as standard scanf)
   57 00000020         ; * ----------------------------------------------------
                       ------------------------
   58 00000020         ; * parameters: -
   59 00000020         ; *
   60 00000020         ; * return:  r0 - the readed value
   61 00000020         ; *
   62 00000020         ; * comments: use USE_STDIO_ECHO 1 in config.h to have a
                       n echo
   63 00000020         ; *     on the serial port when typing
   64 00000020         ; ******************************************************
                       ***********************/
   65 00000020         decIn
   66 00000020 E92D 501E       push             {r1-r4,ip,lr}
   67 00000024 4817            ldr              r0,=strDecIn
   68 00000026 4918            ldr              r1,=readVal
   69 00000028 F7FF FFFE       bl               scanf
   70 0000002C F7FF FFFE       bl               getchar     ; flush CR
   71 00000030 4915            ldr              r1,=readVal
   72 00000032 6808            ldr              r0,[r1]
   73 00000034 E8BD 901E       pop              {r1-r4,ip,pc}
   74 00000038         
   75 00000038         
   76 00000038         ;/******************************************************
                       ************************
   77 00000038         ; * name:   strIn
   78 00000038         ; * function: reads a string on the debug terminal
   79 00000038         ; *     The string ends with a CR
   80 00000038         ; * ----------------------------------------------------
                       ------------------------
   81 00000038         ; * parameters: r0 - the string pointer
   82 00000038         ; *    r1 - length max
   83 00000038         ; *
   84 00000038         ; * comments: use USE_STDIO_ECHO 1 in config.h to have a
                       n echo
   85 00000038         ; *     on the serial port when typing
   86 00000038         ; ******************************************************
                       ***********************/
   87 00000038         strIn
   88 00000038 E92D 503F       push             {r0-r5,ip,lr}
   89 0000003C 460C            mov              r4,r1
   90 0000003E 4605            mov              r5,r0
   91 00000040         loopStrIn
   92 00000040 4629            mov              r1,r5
   93 00000042 F7FF FFFE       bl               getchar
   94 00000046 280D            cmp              r0,#0x0D
   95 00000048 D007            beq              replaceCrStrIn
   96 0000004A 7028            strb             r0,[r5]



ARM Macro Assembler    Page 3 


   97 0000004C F1A4 0401       sub              r4,r4,#1
   98 00000050 2C00            cmp              r4,#0
   99 00000052 D007            beq              endNull
  100 00000054 F105 0501       add              r5,r5,#1
  101 00000058 E7F2            b                loopStrIn
  102 0000005A         replaceCrStrIn
  103 0000005A F04F 0000       mov              r0,#0
  104 0000005E 7028            strb             r0,[r5]
  105 00000060 E8BD 903F       pop              {r0-r5,ip,pc}
  106 00000064         endNull
  107 00000064 F04F 0100       mov              r1,#0
  108 00000068 7069            strb             r1,[r5,#1]
  109 0000006A E8BD 903F       pop              {r0-r5,ip,pc}
  110 0000006E         
  111 0000006E         ;/* strings for printf and scanf usage  */
  112 0000006E 25 6C 64 
              00       strDecOut
                               DCB              "%ld",0
  113 00000072 25 6C 64 
              00       strDecIn
                               DCB              "%ld",0
  114 00000076 25 73 00 
              00       strStrOut
                               DCB              "%s",0,0
  115 0000007A         
  116 0000007A 00 00 00000000 
              00000000 
              00000000 
              00000000 
              00000000         AREA             |.data|, DATA, READWRITE, ALIGN
=4
  117 00000000 00000000 
                       readVal DCD              0           ;/* one word byte f
                                                            or read */
  118 00000004         
  119 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M7.fp.sp --apcs=
interwork --depend=.\objects\asmcalls.d -o.\objects\asmcalls.o -I.\RTE\Device\S
TM32F746NGHx -I.\RTE\Hesso_pack -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMS
IS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\HessoValais\Extension_board\1.0.0\
extension_board -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.10.0\Drivers\CMSIS\D
evice\ST\STM32F7xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.10.0\Driv
ers\STM32F7xx_HAL_Driver\Inc --predefine="__UVISION_VERSION SETA 525" --predefi
ne="_RTE_ SETA 1" --predefine="STM32F746xx SETA 1" --list=.\listings\asmcalls.l
st RTE\Hesso_pack\asmcalls.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 16 in file RTE\Hesso_pack\asmcalls.s
   Uses
      None
Comment: .text unused
decIn 00000020

Symbol: decIn
   Definitions
      At line 65 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 10 in file RTE\Hesso_pack\asmcalls.s
Comment: decIn used once
decOut 00000000

Symbol: decOut
   Definitions
      At line 28 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 8 in file RTE\Hesso_pack\asmcalls.s
Comment: decOut used once
endNull 00000064

Symbol: endNull
   Definitions
      At line 106 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 99 in file RTE\Hesso_pack\asmcalls.s
Comment: endNull used once
loopStrIn 00000040

Symbol: loopStrIn
   Definitions
      At line 91 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 101 in file RTE\Hesso_pack\asmcalls.s
Comment: loopStrIn used once
replaceCrStrIn 0000005A

Symbol: replaceCrStrIn
   Definitions
      At line 102 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 95 in file RTE\Hesso_pack\asmcalls.s
Comment: replaceCrStrIn used once
strDecIn 00000072

Symbol: strDecIn
   Definitions
      At line 113 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 67 in file RTE\Hesso_pack\asmcalls.s
Comment: strDecIn used once
strDecOut 0000006E

Symbol: strDecOut



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 112 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 31 in file RTE\Hesso_pack\asmcalls.s
Comment: strDecOut used once
strIn 00000038

Symbol: strIn
   Definitions
      At line 87 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 11 in file RTE\Hesso_pack\asmcalls.s
Comment: strIn used once
strOut 00000010

Symbol: strOut
   Definitions
      At line 46 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 9 in file RTE\Hesso_pack\asmcalls.s
Comment: strOut used once
strStrOut 00000076

Symbol: strStrOut
   Definitions
      At line 114 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 49 in file RTE\Hesso_pack\asmcalls.s
Comment: strStrOut used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.data 00000000

Symbol: .data
   Definitions
      At line 116 in file RTE\Hesso_pack\asmcalls.s
   Uses
      None
Comment: .data unused
readVal 00000000

Symbol: readVal
   Definitions
      At line 117 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 68 in file RTE\Hesso_pack\asmcalls.s
      At line 71 in file RTE\Hesso_pack\asmcalls.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

getchar 00000000

Symbol: getchar
   Definitions
      At line 14 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 70 in file RTE\Hesso_pack\asmcalls.s
      At line 93 in file RTE\Hesso_pack\asmcalls.s

printf 00000000

Symbol: printf
   Definitions
      At line 12 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 32 in file RTE\Hesso_pack\asmcalls.s
      At line 50 in file RTE\Hesso_pack\asmcalls.s

scanf 00000000

Symbol: scanf
   Definitions
      At line 13 in file RTE\Hesso_pack\asmcalls.s
   Uses
      At line 69 in file RTE\Hesso_pack\asmcalls.s
Comment: scanf used once
3 symbols
352 symbols in table
